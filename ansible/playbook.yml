---
- hosts: master
  remote_user: vagrant
  sudo: yes
  tasks:
      - name: update hosts file
        template: src=../config/hosts.j2 dest=/etc/hosts
      - name: install mesosphere yum repo
        yum: name=http://repos.mesosphere.com/el/7/noarch/RPMS/mesosphere-el-repo-7-1.noarch.rpm state=present
      - name: install zookeeper yum repo
        yum: name=http://archive.cloudera.com/cdh4/one-click-install/redhat/6/x86_64/cloudera-cdh-4-0.x86_64.rpm state=present
      - name: install zookeeper
        yum: pkg=zookeeper,zookeeper-server state=latest disable_gpg_check=yes
      - name: install mesos, marathon, chronos, and docker packages
        yum: pkg=device-mapper-event-libs,mesos,marathon,chronos,docker state=latest
      - name: set zookeeper to start on os init 
        shell: chkconfig zookeeper-server on
      - name: set mesos-master to start on os init 
        shell: chkconfig mesos-master on
      - name: set mesos-slave to start on os init 
        shell: chkconfig mesos-slave on
      - name: set marathon to start on os init 
        shell: chkconfig marathon on
      - name: configure zookeeper ID
        become_user: zookeeper
        shell: zookeeper-server-initialize --myid=1
      - name: configure containerizers
        lineinfile: dest=/etc/mesos-slave/containerizers create=yes line="docker,mesos"
      - name: start zookeeper
        service: name=zookeeper-server state=started enabled=yes
      - name: start mesos-master
        service: name=mesos-master state=started enabled=yes
      - name: start mesos-slave
        service: name=mesos-slave state=started enabled=yes
      - name: start marathon
        service: name=marathon state=started enabled=yes
      - name: start chronos
        service: name=chronos state=started enabled=yes
      - name: start docker
        service: name=docker state=started enabled=yes
      - name: install go, git, and dnsutil, nano and mlocate packages
        yum: pkg=golang,git,bind-utils,nano,mlocate state=latest
      - name: build docker outyet
        become_user: vagrant
        shell: sh /vagrant/outyet-app/docker-build-outyet.sh
      - name: build/configure mesos-dns
        become_user: vagrant
        shell: sh /vagrant/config/installdns.sh
      - name: configure dns
        template: src=../config/resolv.conf.j2 dest=/etc/resolv.conf
      - name: configure marathon services
        shell: cd /vagrant/marathon && sh post.sh
      - name: install ruby for later chronos build
        yum: pkg=ruby state=latest
      - name: sync chronos jobs
        shell: ruby /vagrant/chronos-sync.rb -u http://192.168.33.10:4400/ -p /vagrant/chronos
      - name: update the rsyslog config
        template: src=../config/mesos.conf.j2 dest=/etc/rsyslog.d/mesos.conf
      - name: restart rsyslog
        shell: service rsyslog restart



- hosts: nodes
  remote_user: vagrant
  sudo: yes
  tasks:
      - name: update hosts file
        template: src=../config/hosts.j2 dest=/etc/hosts
      - name: install mesosphere yum repo
        yum: name=http://repos.mesosphere.com/el/7/noarch/RPMS/mesosphere-el-repo-7-1.noarch.rpm state=present
      - name: install mesos and docker packages
        yum: pkg=device-mapper-event-libs,mesos,docker state=latest
      - name: install nano and mlocate packages
        yum: pkg=nano,mlocate state=latest
      - name: set mesos-master to NOT start on os init 
        shell: chkconfig mesos-master off
      - name: set mesos-slave to start on os init 
        shell: chkconfig mesos-slave on
      - name: set docker to start on os init 
        shell: chkconfig docker on
      - name: configure dns
        template: src=../config/resolv.conf.j2 dest=/etc/resolv.conf
      - name: configure containerizers
        lineinfile: dest=/etc/mesos-slave/containerizers create=yes line="docker,mesos"
      - name: set zookeeper master
        shell: sed -i -e 's/localhost/192.168.33.10/g' /etc/mesos/zk
      - name: stop the mesos slave but make it start on boot
        service: name=mesos-slave state=stopped enabled=yes
      - name: disable the mesos-master by default
        service: name=mesos-master state=stopped enabled=no
      - name: kill the slave state
        shell: rm -rf /tmp/mesos*
      - name: start docker
        service: name=docker state=started enabled=yes
      - name: build docker outyet
        become_user: vagrant
        shell: sh /vagrant/outyet-app/docker-build-outyet.sh
      - name: update the rsyslog config
        template: src=../config/mesos.conf.j2 dest=/etc/rsyslog.d/mesos.conf
      - name: restart rsyslog
        shell: service rsyslog restart
  


